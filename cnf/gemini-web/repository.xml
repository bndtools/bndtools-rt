<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www2.osgi.org/www/obr2html.xsl'?>

<repository lastmodified='20120531011151.083' name='Untitled'>
  <resource id='com.springsource.javax.activation/1.1.1' presentationname='Java Activation API' symbolicname='com.springsource.javax.activation' uri='com.springsource.javax.activation-1.1.1.jar' version='1.1.1'>
    <size>
      70182
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Activation API'/>
      <p n='symbolicname' v='com.springsource.javax.activation'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
  </resource>
  <resource id='com.springsource.javax.ejb/3.0.0' presentationname='Java EJB API' symbolicname='com.springsource.javax.ejb' uri='com.springsource.javax.ejb-3.0.0.jar' version='3.0.0'>
    <size>
      34176
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java EJB API'/>
      <p n='symbolicname' v='com.springsource.javax.ejb'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb'/>
      <p n='uses' v='javax.transaction,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb.spi'/>
      <p n='uses' v='javax.ejb'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.interceptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.handler)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.handler ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.mail/1.4.0' presentationname='Java Mail' symbolicname='com.springsource.javax.mail' uri='com.springsource.javax.mail-1.4.0.jar' version='1.4.0'>
    <size>
      393311
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Mail'/>
      <p n='symbolicname' v='com.springsource.javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.handlers'/>
      <p n='uses' v='javax.activation'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.iap'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.imap'/>
      <p n='uses' v='com.sun.mail.iap,com.sun.mail.imap.protocol,javax.activation,javax.mail,javax.mail.internet,javax.mail.search'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.imap.protocol'/>
      <p n='uses' v='com.sun.mail.iap,com.sun.mail.imap,javax.mail,javax.mail.internet,javax.mail.search,javax.security.auth.callback'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.pop3'/>
      <p n='uses' v='javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.smtp'/>
      <p n='uses' v='javax.mail,javax.mail.internet'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.mail.util'/>
      <p n='uses' v='javax.mail,javax.net'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail'/>
      <p n='uses' v='javax.activation,javax.mail.event,javax.mail.search'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.event'/>
      <p n='uses' v='javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.internet'/>
      <p n='uses' v='com.sun.mail.util,javax.activation,javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.search'/>
      <p n='uses' v='javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.util'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.callback
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.sasl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.sasl
    </require>
  </resource>
  <resource id='com.springsource.javax.persistence/1.0.0' presentationname='Java Persistence API' symbolicname='com.springsource.javax.persistence' uri='com.springsource.javax.persistence-1.0.0.jar' version='1.0.0'>
    <size>
      53773
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Persistence API'/>
      <p n='symbolicname' v='com.springsource.javax.persistence'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.spi'/>
      <p n='uses' v='javax.persistence,javax.sql'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.bind/2.1.7' presentationname='Java XML Binding API' symbolicname='com.springsource.javax.xml.bind' uri='com.springsource.javax.xml.bind-2.1.7.jar' version='2.1.7'>
    <size>
      91992
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java XML Binding API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.bind'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind'/>
      <p n='uses' v='javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation'/>
      <p n='uses' v='javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.attachment'/>
      <p n='uses' v='javax.activation'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.helpers'/>
      <p n='uses' v='javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.transform.stream,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.util'/>
      <p n='uses' v='javax.xml.bind,org.xml.sax'/>
      <p n='version' t='version' v='2.1.7'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.rpc/1.1.0.v20110517' presentationname='Java XML RPC API' symbolicname='com.springsource.javax.xml.rpc' uri='com.springsource.javax.xml.rpc-1.1.0.v20110517.jar' version='1.1.0.v20110517'>
    <size>
      32374
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java XML RPC API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.rpc'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.messaging'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.rpc.encoding,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.encoding'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler.soap'/>
      <p n='uses' v='javax.xml.rpc.handler,javax.xml.soap'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.holders'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.server'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.xml.rpc,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.soap'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.soap'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.soap ;version=[1.3.0,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.soap/1.3.0' presentationname='Java SOAP API' symbolicname='com.springsource.javax.xml.soap' uri='com.springsource.javax.xml.soap-1.3.0.jar' version='1.3.0'>
    <size>
      19496
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java SOAP API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.soap'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.soap'/>
      <p n='uses' v='javax.activation,javax.xml.namespace,javax.xml.transform,org.w3c.dom'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.stream/1.0.1' presentationname='Java XML Stream API (StAX)' symbolicname='com.springsource.javax.xml.stream' uri='com.springsource.javax.xml.stream-1.0.1.jar' version='1.0.1'>
    <size>
      26729
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java XML Stream API (StAX)'/>
      <p n='symbolicname' v='com.springsource.javax.xml.stream'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.stream'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.stream.events'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.stream.util'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,javax.xml.stream.events'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
  </resource>
  <resource id='com.springsource.org.aopalliance/1.0.0' presentationname='AOP Alliance API' symbolicname='com.springsource.org.aopalliance' uri='com.springsource.org.aopalliance-1.0.0.jar' version='1.0.0'>
    <size>
      4615
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='AOP Alliance API'/>
      <p n='symbolicname' v='com.springsource.org.aopalliance'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.aopalliance.aop'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.aopalliance.intercept'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
  </resource>
  <resource id='com.springsource.org.apache.catalina/7.0.21' presentationname='Apache Tomcat Catalina' symbolicname='com.springsource.org.apache.catalina' uri='com.springsource.org.apache.catalina-7.0.21.jar' version='7.0.21'>
    <size>
      1476505
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tomcat Catalina'/>
      <p n='symbolicname' v='com.springsource.org.apache.catalina'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina'/>
      <p n='uses' v='javax.management,javax.naming,javax.naming.directory,javax.servlet,javax.servlet.descriptor,javax.servlet.http,org.apache.catalina.comet,org.apache.catalina.connector,org.apache.catalina.core,org.apache.catalina.deploy,org.apache.catalina.startup,org.apache.catalina.util,org.apache.juli.logging,org.apache.tomcat,org.apache.tomcat.util.http.mapper,org.ietf.jgss'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.authenticator'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.catalina,org.apache.catalina.connector,org.apache.catalina.deploy,org.apache.catalina.valves,org.apache.juli.logging,org.apache.tomcat.util.buf,org.ietf.jgss'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.comet'/>
      <p n='uses' v='javax.servlet,javax.servlet.http'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.connector'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.catalina,org.apache.catalina.comet,org.apache.catalina.util,org.apache.coyote,org.apache.tomcat.util.buf,org.apache.tomcat.util.http.mapper,org.apache.tomcat.util.net'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.core'/>
      <p n='uses' v='javax.management,javax.naming,javax.naming.directory,javax.servlet,javax.servlet.descriptor,javax.servlet.http,org.apache.catalina,org.apache.catalina.comet,org.apache.catalina.connector,org.apache.catalina.deploy,org.apache.catalina.startup,org.apache.catalina.util,org.apache.catalina.valves,org.apache.coyote,org.apache.juli.logging,org.apache.naming,org.apache.tomcat,org.apache.tomcat.util.http.fileupload,org.apache.tomcat.util.http.mapper,org.apache.tomcat.util.threads'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.deploy'/>
      <p n='uses' v='javax.servlet,org.apache.catalina,org.apache.catalina.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.filters'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.catalina.comet,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.loader'/>
      <p n='uses' v='javax.naming.directory,org.apache.catalina,org.apache.catalina.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.manager'/>
      <p n='uses' v='javax.management,javax.naming,javax.servlet,javax.servlet.http,org.apache.catalina,org.apache.catalina.manager.util,org.apache.catalina.util,org.apache.tomcat.util.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.manager.host'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.catalina,org.apache.tomcat.util.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.manager.util'/>
      <p n='uses' v='javax.servlet.http,org.apache.catalina'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.mbeans'/>
      <p n='uses' v='javax.management,javax.naming,org.apache.catalina,org.apache.catalina.connector,org.apache.catalina.deploy,org.apache.tomcat.util.modeler'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.realm'/>
      <p n='uses' v='javax.management,javax.naming,javax.naming.directory,javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.apache.catalina,org.apache.catalina.connector,org.apache.catalina.deploy,org.apache.catalina.util,org.apache.juli.logging,org.apache.tomcat.util.digester,org.ietf.jgss,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.security'/>
      <p n='uses' v='javax.servlet,org.apache.catalina'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.servlets'/>
      <p n='uses' v='javax.naming.directory,javax.servlet,javax.servlet.http,javax.xml.parsers,org.apache.catalina.util,org.apache.naming.resources,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.session'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.catalina,org.apache.catalina.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ssi'/>
      <p n='uses' v='javax.servlet,javax.servlet.http'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.startup'/>
      <p n='uses' v='javax.annotation,javax.servlet,org.apache.catalina,org.apache.catalina.connector,org.apache.catalina.core,org.apache.catalina.deploy,org.apache.catalina.loader,org.apache.catalina.realm,org.apache.catalina.util,org.apache.juli.logging,org.apache.tomcat,org.apache.tomcat.util.bcel.classfile,org.apache.tomcat.util.digester,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.users'/>
      <p n='uses' v='javax.naming,javax.naming.spi,org.apache.catalina,org.apache.tomcat.util.digester,org.apache.tomcat.util.res,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.util'/>
      <p n='uses' v='javax.management,javax.naming.directory,javax.servlet,org.apache.catalina,org.apache.tomcat.util.buf,org.apache.tomcat.util.digester,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.valves'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,org.apache.catalina,org.apache.catalina.comet,org.apache.catalina.connector,org.apache.catalina.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.naming'/>
      <p n='uses' v='javax.naming'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.naming.factory'/>
      <p n='uses' v='javax.mail,javax.mail.internet,javax.naming,javax.naming.spi,javax.sql'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.naming.java'/>
      <p n='uses' v='javax.naming,javax.naming.spi'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.naming.resources'/>
      <p n='uses' v='javax.naming,javax.naming.directory'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.naming.resources.jndi'/>
      <p n='uses' v='org.apache.naming.resources'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation.security)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation.security ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.ejb ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.mail ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.mail.internet ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.modelmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=[1.0.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.callback ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.login ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.spi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.descriptor)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.descriptor ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.ha)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.ha ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.coyote)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.coyote ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.coyote.ajp)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.coyote.ajp ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.coyote.http11)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.coyote.http11 ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.jni)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.jni ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.bcel.classfile)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.bcel.classfile ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.buf)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.buf ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.digester)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.digester ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.http)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.http ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.http.fileupload)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.http.fileupload ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.http.fileupload.disk)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.http.fileupload.disk
       ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.http.fileupload.servlet)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.http.fileupload.servlet
       ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.http.mapper)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.http.mapper ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.log)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.log ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.modeler)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.modeler ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.net)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.net ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.res)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.res ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.scan)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.scan ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.threads)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.threads ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.ietf.jgss)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.ietf.jgss ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='com.springsource.org.apache.catalina.ha/7.0.21' presentationname='Apache Tomcat Catalina HA' symbolicname='com.springsource.org.apache.catalina.ha' uri='com.springsource.org.apache.catalina.ha-7.0.21.jar' version='7.0.21'>
    <size>
      131161
    </size>
    <capability name='fragment'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tomcat Catalina HA'/>
      <p n='symbolicname' v='com.springsource.org.apache.catalina.ha'/>
      <p n='version' t='version' v='7.0.21'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha'/>
      <p n='uses' v='javax.servlet.http,org.apache.catalina,org.apache.catalina.tribes,org.apache.catalina.tribes.io,org.apache.juli.logging,org.apache.tomcat.util.digester'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.authenticator'/>
      <p n='uses' v='org.apache.catalina,org.apache.catalina.authenticator,org.apache.catalina.ha,org.apache.catalina.tribes'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.backend'/>
      <p n='uses' v='org.apache.catalina'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.context'/>
      <p n='uses' v='javax.servlet,org.apache.catalina,org.apache.catalina.core,org.apache.catalina.tribes.tipis'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.deploy'/>
      <p n='uses' v='org.apache.catalina,org.apache.catalina.ha,org.apache.catalina.tribes'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.jmx'/>
      <p n='uses' v='javax.management,org.apache.catalina.ha.tcp,org.apache.tomcat.util.modeler'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.session'/>
      <p n='uses' v='javax.servlet,org.apache.catalina,org.apache.catalina.connector,org.apache.catalina.ha,org.apache.catalina.realm,org.apache.catalina.session,org.apache.catalina.tribes,org.apache.catalina.tribes.io,org.apache.catalina.tribes.tipis,org.apache.catalina.valves'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.tcp'/>
      <p n='uses' v='javax.servlet,org.apache.catalina,org.apache.catalina.connector,org.apache.catalina.ha,org.apache.catalina.ha.session,org.apache.catalina.ha.util,org.apache.catalina.tribes,org.apache.catalina.util,org.apache.catalina.valves,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.ha.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.springsource.org.apache.catalina)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.springsource.org.apache.catalina
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.authenticator)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.authenticator ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.connector)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.connector ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.core)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.core ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.realm)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.realm ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.session)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.session ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.tribes)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.tribes ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.tribes.group)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.tribes.group ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.tribes.group.interceptors)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.tribes.group.interceptors
       ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.tribes.io)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.tribes.io ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.tribes.tipis)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.tribes.tipis ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.util)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.util ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.valves)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.valves ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.buf)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.buf ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.digester)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.digester ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.modeler)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.modeler ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.res)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.res ;version=[7.0.21,7.0.21]
    </require>
  </resource>
  <resource id='com.springsource.org.apache.catalina.tribes/7.0.21' presentationname='Apache Tomcat Catalina Tribes' symbolicname='com.springsource.org.apache.catalina.tribes' uri='com.springsource.org.apache.catalina.tribes-7.0.21.jar' version='7.0.21'>
    <size>
      256233
    </size>
    <capability name='fragment'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tomcat Catalina Tribes'/>
      <p n='symbolicname' v='com.springsource.org.apache.catalina.tribes'/>
      <p n='version' t='version' v='7.0.21'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes'/>
      <p n='uses' v='org.apache.catalina.tribes.group,org.apache.catalina.tribes.io'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.group'/>
      <p n='uses' v='org.apache.catalina.tribes'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.group.interceptors'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.group,org.apache.catalina.tribes.io,org.apache.catalina.tribes.membership,org.apache.catalina.tribes.transport.bio.util,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.io'/>
      <p n='uses' v='org.apache.catalina.tribes'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.membership'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.io,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.tipis'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.group,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.transport'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.io,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.transport.bio'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.io,org.apache.catalina.tribes.transport'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.transport.bio.util'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.group'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.transport.nio'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.io,org.apache.catalina.tribes.transport,org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.catalina.tribes.util'/>
      <p n='uses' v='org.apache.catalina.tribes,org.apache.catalina.tribes.membership'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.springsource.org.apache.catalina)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.springsource.org.apache.catalina
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.ha.session)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.ha.session ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=[7.0.21,7.0.21]
    </require>
  </resource>
  <resource id='com.springsource.org.apache.commons.logging/1.1.1' presentationname='Apache Commons Logging' symbolicname='com.springsource.org.apache.commons.logging' uri='com.springsource.org.apache.commons.logging-1.1.1.jar' version='1.1.1'>
    <size>
      61464
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Logging'/>
      <p n='symbolicname' v='com.springsource.org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='uses' v='javax.servlet,org.apache.avalon.framework.logger,org.apache.commons.logging,org.apache.log,org.apache.log4j'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=4.1.3)(version&lt;=4.1.3))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.logger ;version=[4.1.3,4.1.3]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=1.0.1)(version&lt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.log ;version=[1.0.1,1.0.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.org.apache.coyote/7.0.21' presentationname='Apache Tomcat/Coyote' symbolicname='com.springsource.org.apache.coyote' uri='com.springsource.org.apache.coyote-7.0.21.jar' version='7.0.21'>
    <size>
      748020
    </size>
    <capability name='fragment'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tomcat/Coyote'/>
      <p n='symbolicname' v='com.springsource.org.apache.coyote'/>
      <p n='version' t='version' v='7.0.21'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.coyote'/>
      <p n='uses' v='javax.management,org.apache.juli.logging,org.apache.tomcat.util.buf,org.apache.tomcat.util.http,org.apache.tomcat.util.net'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.coyote.ajp'/>
      <p n='uses' v='org.apache.coyote,org.apache.juli.logging,org.apache.tomcat.util.buf,org.apache.tomcat.util.net'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.coyote.http11'/>
      <p n='uses' v='org.apache.coyote,org.apache.juli.logging,org.apache.tomcat.util.buf,org.apache.tomcat.util.net'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.coyote.http11.filters'/>
      <p n='uses' v='org.apache.coyote,org.apache.coyote.http11,org.apache.tomcat.util.buf'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.jni'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.transform,org.apache.juli.logging,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.bcel'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.bcel.classfile'/>
      <p n='uses' v='org.apache.tomcat.util.bcel,org.apache.tomcat.util.bcel.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.bcel.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.buf'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.digester'/>
      <p n='uses' v='javax.xml.parsers,org.apache.juli.logging,org.apache.tomcat.util,org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http'/>
      <p n='uses' v='org.apache.tomcat.util.buf'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http.fileupload'/>
      <p n='uses' v='org.apache.tomcat.util.http.fileupload.util'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http.fileupload.disk'/>
      <p n='uses' v='org.apache.tomcat.util.http.fileupload'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http.fileupload.servlet'/>
      <p n='uses' v='javax.servlet.http,org.apache.tomcat.util.http.fileupload'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http.fileupload.util'/>
      <p n='uses' v='org.apache.tomcat.util.http.fileupload'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http.mapper'/>
      <p n='uses' v='javax.naming,org.apache.tomcat.util.buf'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.http.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.log'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.modeler'/>
      <p n='uses' v='javax.management,javax.management.modelmbean'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.modeler.modules'/>
      <p n='uses' v='javax.management,org.apache.tomcat.util.digester,org.apache.tomcat.util.modeler'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.net'/>
      <p n='uses' v='javax.net.ssl,org.apache.juli.logging,org.apache.tomcat.util,org.apache.tomcat.util.threads'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.net.jsse'/>
      <p n='uses' v='javax.net.ssl,org.apache.tomcat.util.net'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.net.jsse.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.net.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.threads'/>
      <p n='uses' v='org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.threads.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.springsource.org.apache.catalina)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.springsource.org.apache.catalina
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.loading)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.loading ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.modelmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.cert)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.cert ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.res)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.res ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='com.springsource.org.apache.el/7.0.21' presentationname='Apache EL' symbolicname='com.springsource.org.apache.el' uri='com.springsource.org.apache.el-7.0.21.jar' version='7.0.21'>
    <size>
      123907
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache EL'/>
      <p n='symbolicname' v='com.springsource.org.apache.el'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.el'/>
      <p n='uses' v='javax.el,org.apache.el.parser'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.el.lang'/>
      <p n='uses' v='javax.el,org.apache.el.parser'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.el.parser'/>
      <p n='uses' v='javax.el,org.apache.el.lang'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.el.util'/>
      <p n='uses' v='javax.el'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
  </resource>
  <resource id='com.springsource.org.apache.jasper/7.0.21' presentationname='Apache Jasper JSP support' symbolicname='com.springsource.org.apache.jasper' uri='com.springsource.org.apache.jasper-7.0.21.jar' version='7.0.21'>
    <size>
      595122
    </size>
    <capability name='fragment'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Jasper JSP support'/>
      <p n='symbolicname' v='com.springsource.org.apache.jasper'/>
      <p n='version' t='version' v='7.0.21'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper'/>
      <p n='uses' v='javax.servlet,javax.servlet.jsp.tagext,org.apache.jasper.compiler,org.apache.jasper.servlet,org.apache.tools.ant'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.compiler'/>
      <p n='uses' v='javax.el,javax.servlet,javax.servlet.jsp.tagext,javax.xml.parsers,org.apache.jasper,org.apache.jasper.compiler.tagplugin,org.apache.jasper.servlet,org.apache.jasper.util,org.apache.jasper.xmlparser,org.apache.juli.logging,org.apache.tomcat,org.apache.tools.ant,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.env,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.compiler.tagplugin'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.el'/>
      <p n='uses' v='javax.el,javax.servlet.jsp.el'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.resources'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.runtime'/>
      <p n='uses' v='javax.el,javax.servlet,javax.servlet.http,javax.servlet.jsp,javax.servlet.jsp.el,javax.servlet.jsp.tagext,org.apache.jasper,org.apache.jasper.el,org.apache.tomcat'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.security'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.servlet'/>
      <p n='uses' v='javax.servlet,javax.servlet.descriptor,javax.servlet.http,javax.servlet.jsp.tagext,org.apache.jasper,org.apache.jasper.compiler,org.apache.jasper.util,org.apache.tomcat'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.tagplugins.jstl'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.servlet.jsp'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.tagplugins.jstl.core'/>
      <p n='uses' v='org.apache.jasper.compiler.tagplugin'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.util'/>
      <p n='uses' v='org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.jasper.xmlparser'/>
      <p n='uses' v='org.apache.jasper,org.apache.jasper.compiler,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.springsource.org.apache.catalina)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.springsource.org.apache.catalina
    </require>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.descriptor)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.descriptor ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.el ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.resources)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.resources ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.tagext ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.resources)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.resources ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.el)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.el ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.el.lang)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.el.lang ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.scan)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.scan ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.taskdefs ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.core.compiler)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jdt.core.compiler ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.compiler)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jdt.internal.compiler ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.compiler.classfmt)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jdt.internal.compiler.classfmt ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.compiler.env)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jdt.internal.compiler.env ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.compiler.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jdt.internal.compiler.impl ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jdt.internal.compiler.problem)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.jdt.internal.compiler.problem ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='com.springsource.org.apache.juli.extras/7.0.21' presentationname='Apache Java Util Logging extras' symbolicname='com.springsource.org.apache.juli.extras' uri='com.springsource.org.apache.juli.extras-7.0.21.jar' version='7.0.21'>
    <size>
      38600
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Java Util Logging extras'/>
      <p n='symbolicname' v='com.springsource.org.apache.juli.extras'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.juli'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.juli.logging'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
  </resource>
  <resource id='com.springsource.org.apache.tomcat.api/7.0.21' presentationname='Apache Tomcat API' symbolicname='com.springsource.org.apache.tomcat.api' uri='com.springsource.org.apache.tomcat.api-7.0.21.jar' version='7.0.21'>
    <size>
      7190
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tomcat API'/>
      <p n='symbolicname' v='com.springsource.org.apache.tomcat.api'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat'/>
      <p n='uses' v='javax.naming,javax.servlet'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[3.0.0,4.0.0)
    </require>
  </resource>
  <resource id='com.springsource.org.apache.tomcat.util/7.0.21' presentationname='Apache Tomcat Util' symbolicname='com.springsource.org.apache.tomcat.util' uri='com.springsource.org.apache.tomcat.util-7.0.21.jar' version='7.0.21'>
    <size>
      23561
    </size>
    <capability name='fragment'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.springsource.org.apache.catalina'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tomcat Util'/>
      <p n='symbolicname' v='com.springsource.org.apache.tomcat.util'/>
      <p n='version' t='version' v='7.0.21'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.file'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.res'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tomcat.util.scan'/>
      <p n='uses' v='javax.servlet,org.apache.tomcat'/>
      <p n='version' t='version' v='7.0.21'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.springsource.org.apache.catalina)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.springsource.org.apache.catalina
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=[7.0.21,7.0.21]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat)(version&gt;=7.0.21)(version&lt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat ;version=[7.0.21,7.0.21]
    </require>
  </resource>
  <resource id='com.springsource.org.eclipse.jdt.core.compiler.batch/3.6.1' presentationname='Eclipse JDT Batch Compile' symbolicname='com.springsource.org.eclipse.jdt.core.compiler.batch' uri='com.springsource.org.eclipse.jdt.core.compiler.batch-3.6.1.jar' version='3.6.1'>
    <size>
      1705335
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Eclipse JDT Batch Compile'/>
      <p n='symbolicname' v='com.springsource.org.eclipse.jdt.core.compiler.batch'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.core'/>
      <p n='uses' v='org.apache.tools.ant,org.apache.tools.ant.taskdefs.compilers,org.apache.tools.ant.types'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.core.compiler'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.core.compiler.batch'/>
      <p n='uses' v='org.eclipse.jdt.core.compiler'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.antadapter'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler'/>
      <p n='uses' v='org.eclipse.jdt.core,org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.classfmt,org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.lookup,org.eclipse.jdt.internal.compiler.problem,org.eclipse.jdt.internal.compiler.util'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.apt.dispatch'/>
      <p n='uses' v='javax.annotation.processing,javax.lang.model,javax.lang.model.element,javax.lang.model.util,javax.tools,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.apt.model,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.batch,org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.lookup,org.eclipse.jdt.internal.compiler.problem'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.apt.model'/>
      <p n='uses' v='javax.lang.model.element,javax.lang.model.type,javax.lang.model.util,org.eclipse.jdt.internal.compiler.apt.dispatch,org.eclipse.jdt.internal.compiler.lookup'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.apt.util'/>
      <p n='uses' v='javax.lang.model.element,javax.tools'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.ast'/>
      <p n='uses' v='org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.codegen,org.eclipse.jdt.internal.compiler.flow,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.lookup,org.eclipse.jdt.internal.compiler.parser,org.eclipse.jdt.internal.compiler.problem'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.batch'/>
      <p n='uses' v='org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.problem,org.eclipse.jdt.internal.compiler.util'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.classfmt'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.impl'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.codegen'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.classfmt,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.lookup'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.env'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler.impl'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.flow'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.codegen,org.eclipse.jdt.internal.compiler.lookup'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.impl'/>
      <p n='uses' v='org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.lookup'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.lookup'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.codegen,org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.flow,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.problem,org.eclipse.jdt.internal.compiler.util'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.parser'/>
      <p n='uses' v='org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.env,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.lookup,org.eclipse.jdt.internal.compiler.problem'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.parser.diagnose'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.parser'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.problem'/>
      <p n='uses' v='org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.impl,org.eclipse.jdt.internal.compiler.lookup,org.eclipse.jdt.internal.compiler.parser,org.eclipse.jdt.internal.compiler.util'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.tool'/>
      <p n='uses' v='javax.lang.model.element,javax.tools,org.eclipse.jdt.core.compiler,org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.batch,org.eclipse.jdt.internal.compiler.problem'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.jdt.internal.compiler.util'/>
      <p n='uses' v='org.eclipse.jdt.internal.compiler,org.eclipse.jdt.internal.compiler.ast,org.eclipse.jdt.internal.compiler.lookup'/>
      <p n='version' t='version' v='3.6.1'/>
    </capability>
  </resource>
  <resource id='com.springsource.slf4j.api/1.6.1' presentationname='SLF4J API' symbolicname='com.springsource.slf4j.api' uri='com.springsource.slf4j.api-1.6.1.jar' version='1.6.1'>
    <description>
      The slf4j API
    </description>
    <size>
      25982
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SLF4J API'/>
      <p n='symbolicname' v='com.springsource.slf4j.api'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='uses' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='uses' v='org.slf4j,org.slf4j.spi'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='uses' v='org.slf4j'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=1.6.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.impl ;version=[1.6.1,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.slf4j.nop/1.6.1' presentationname='SLF4J No-OP Binding' symbolicname='com.springsource.slf4j.nop' uri='com.springsource.slf4j.nop-1.6.1.jar' version='1.6.1'>
    <description>
      The slf4j NOP binding
    </description>
    <size>
      4998
    </size>
    <capability name='fragment'>
      <p n='host' v='com.springsource.slf4j.api'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.springsource.slf4j.api'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SLF4J No-OP Binding'/>
      <p n='symbolicname' v='com.springsource.slf4j.nop'/>
      <p n='version' t='version' v='1.6.1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.impl'/>
      <p n='uses' v='org.slf4j,org.slf4j.spi'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.springsource.slf4j.api)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.springsource.slf4j.api
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.1)(version&lt;=1.6.1))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.1,1.6.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.helpers)(version&gt;=1.6.1)(version&lt;=1.6.1))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.helpers ;version=[1.6.1,1.6.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.6.1)(version&lt;=1.6.1))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=[1.6.1,1.6.1]
    </require>
  </resource>
  <resource id='javax.annotation/1.1.0.v201105051105' presentationname='javax.annotation Bundle' symbolicname='javax.annotation' uri='javax.annotation-1.1.0.v201105051105.jar' version='1.1.0.v201105051105'>
    <size>
      26453
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='javax.annotation Bundle'/>
      <p n='symbolicname' v='javax.annotation'/>
      <p n='version' t='version' v='1.1.0.v201105051105'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.security'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.sql'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='javax.el/2.2.0.v201105051105' presentationname='Javax Expression Language Bundle' symbolicname='javax.el' uri='javax.el-2.2.0.v201105051105.jar' version='2.2.0.v201105051105'>
    <size>
      51111
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Javax Expression Language Bundle'/>
      <p n='symbolicname' v='javax.el'/>
      <p n='version' t='version' v='2.2.0.v201105051105'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.el'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.5.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='javax.servlet/3.0.0.v201103241009' presentationname='Servlet API Bundle' symbolicname='javax.servlet' uri='javax.servlet-3.0.0.v201103241009.jar' version='3.0.0.v201103241009'>
    <description>
      glassfish javax.servlet.3.1.0.b33
    </description>
    <size>
      200390
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Servlet API Bundle'/>
      <p n='symbolicname' v='javax.servlet'/>
      <p n='version' t='version' v='3.0.0.v201103241009'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet'/>
      <p n='uses' v='javax.servlet.annotation,javax.servlet.descriptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.annotation'/>
      <p n='uses' v='javax.servlet'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.descriptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.http'/>
      <p n='uses' v='javax.servlet'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.resources'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='javax.servlet.jsp/2.2.0.v201103241009' presentationname='JSP API Bundle' symbolicname='javax.servlet.jsp' uri='javax.servlet.jsp-2.2.0.v201103241009.jar' version='2.2.0.v201103241009'>
    <size>
      106036
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JSP API Bundle'/>
      <p n='symbolicname' v='javax.servlet.jsp'/>
      <p n='version' t='version' v='2.2.0.v201103241009'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.el'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.resources'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.tagext'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=2.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.el ;version=2.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=3.0.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='javax.transaction/1.1.1.v201004190952' presentationname='geronimo Javax Transaction API 1.1.1 spec' symbolicname='javax.transaction' uri='javax.transaction_1.1.1.v201004190952.jar' version='1.1.1.v201004190952'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      29025
    </size>
    <capability name='fragment'>
      <p n='host' v='system.bundle'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='system.bundle'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo Javax Transaction API 1.1.1 spec'/>
      <p n='symbolicname' v='javax.transaction'/>
      <p n='version' t='version' v='1.1.1.v201004190952'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host system.bundle
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='org.eclipse.gemini.web.core/2.0.1.RELEASE' presentationname='Gemini Web Core' symbolicname='org.eclipse.gemini.web.core' uri='org.eclipse.gemini.web.core-2.0.1.RELEASE.jar' version='2.0.1.RELEASE'>
    <size>
      64454
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Gemini Web Core'/>
      <p n='symbolicname' v='org.eclipse.gemini.web.core'/>
      <p n='version' t='version' v='2.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.gemini.web.core'/>
      <p n='uses' v='javax.servlet,org.eclipse.virgo.util.osgi.manifest,org.osgi.framework'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.gemini.web.core.spi'/>
      <p n='uses' v='javax.servlet,org.osgi.framework'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.gemini.web.internal.template'/>
      <p n='uses' v='org.osgi.framework,org.osgi.util.tracker'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.gemini.web.internal.url'/>
      <p n='uses' v='org.eclipse.gemini.web.core,org.eclipse.virgo.util.io,org.eclipse.virgo.util.osgi.manifest,org.eclipse.virgo.util.osgi.manifest.parse,org.osgi.framework,org.osgi.service.url'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.io)(version&gt;=3.0.1)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.io ;version=[3.0.1,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.osgi)(version&gt;=3.0.1)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.osgi ;version=[3.0.1,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.osgi.manifest)(version&gt;=3.0.1)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.osgi.manifest ;version=[3.0.1,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.osgi.manifest.parse)(version&gt;=3.0.1)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.osgi.manifest.parse ;version=[3.0.1,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.1))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.1
    </require>
  </resource>
  <resource id='org.eclipse.gemini.web.extender/2.0.1.RELEASE' presentationname='Gemini Web Extender' symbolicname='org.eclipse.gemini.web.extender' uri='org.eclipse.gemini.web.extender-2.0.1.RELEASE.jar' version='2.0.1.RELEASE'>
    <size>
      4510
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Gemini Web Extender'/>
      <p n='symbolicname' v='org.eclipse.gemini.web.extender'/>
      <p n='version' t='version' v='2.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.gemini.web.extender'/>
      <p n='uses' v='org.eclipse.gemini.web.core,org.osgi.framework,org.osgi.util.tracker'/>
      <p n='version' t='version' v='2.0.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.gemini.web.core)(version&gt;=2.0.1))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.gemini.web.core ;version=2.0.1
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=0.0.0
    </require>
  </resource>
  <resource id='org.eclipse.gemini.web.tomcat/2.0.1.RELEASE' presentationname='Gemini Web Tomcat Bootstrap' symbolicname='org.eclipse.gemini.web.tomcat' uri='org.eclipse.gemini.web.tomcat-2.0.1.RELEASE.jar' version='2.0.1.RELEASE'>
    <size>
      217768
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Gemini Web Tomcat Bootstrap'/>
      <p n='symbolicname' v='org.eclipse.gemini.web.tomcat'/>
      <p n='version' t='version' v='2.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='conf'/>
      <p n='version' t='version' v='2.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.gemini.web.tomcat.spi'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.0.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.authenticator)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.authenticator ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.core)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.core ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.deploy)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.deploy ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.loader)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.loader ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.mbeans)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.mbeans ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.servlets)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.servlets ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.session)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.session ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.startup)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.startup ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.util)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.util ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.catalina.valves)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.catalina.valves ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.juli.logging ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.naming)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.naming ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.naming.resources)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.naming.resources ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.digester)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.digester ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.modeler)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.modeler ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.res)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.res ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tomcat.util.scan)(version&gt;=7.0.21))' multiple='false' name='package' optional='false'>
      Import package org.apache.tomcat.util.scan ;version=7.0.21
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.gemini.web.core)(version&gt;=2.0.1))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.gemini.web.core ;version=2.0.1
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.gemini.web.core.spi)(version&gt;=2.0.1))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.gemini.web.core.spi ;version=2.0.1
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.baseadaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.baseadaptor ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.baseadaptor.bundlefile)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.baseadaptor.bundlefile ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.adaptor ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.internal.core ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.io)(version&gt;=3.0.1)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.io ;version=[3.0.1,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.osgi)(version&gt;=3.0.1)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.osgi ;version=[3.0.1,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.1))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.1
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.osgi.util)(version&gt;=1.2.1))' multiple='false' name='package' optional='false'>
      Import package org.springframework.osgi.util ;version=1.2.1
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='org.eclipse.virgo.util.common/3.0.1.RELEASE' presentationname='Common Utility Code' symbolicname='org.eclipse.virgo.util.common' uri='org.eclipse.virgo.util.common-3.0.1.RELEASE.jar' version='3.0.1.RELEASE'>
    <size>
      44370
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Common Utility Code'/>
      <p n='symbolicname' v='org.eclipse.virgo.util.common'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.common'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
  </resource>
  <resource id='org.eclipse.virgo.util.io/3.0.1.RELEASE' presentationname='IO Utility Code' symbolicname='org.eclipse.virgo.util.io' uri='org.eclipse.virgo.util.io-3.0.1.RELEASE.jar' version='3.0.1.RELEASE'>
    <size>
      27177
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='IO Utility Code'/>
      <p n='symbolicname' v='org.eclipse.virgo.util.io'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.io'/>
      <p n='uses' v='org.slf4j'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.common)(version&gt;=3.0.1)(!(version&gt;=3.0.2)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.common ;version=[3.0.1,3.0.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.math)(version&gt;=3.0.1)(!(version&gt;=3.0.2)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.math ;version=[3.0.1,3.0.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.1,2.0.0)
    </require>
  </resource>
  <resource id='org.eclipse.virgo.util.math/3.0.1.RELEASE' presentationname='Mathematical Utility Code' symbolicname='org.eclipse.virgo.util.math' uri='org.eclipse.virgo.util.math-3.0.1.RELEASE.jar' version='3.0.1.RELEASE'>
    <size>
      8715
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Mathematical Utility Code'/>
      <p n='symbolicname' v='org.eclipse.virgo.util.math'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.math'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
  </resource>
  <resource id='org.eclipse.virgo.util.osgi/3.0.1.RELEASE' presentationname='OSGi Utility Code' symbolicname='org.eclipse.virgo.util.osgi' uri='org.eclipse.virgo.util.osgi-3.0.1.RELEASE.jar' version='3.0.1.RELEASE'>
    <size>
      98500
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OSGi Utility Code'/>
      <p n='symbolicname' v='org.eclipse.virgo.util.osgi'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.osgi'/>
      <p n='uses' v='org.eclipse.virgo.util.common,org.osgi.framework'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.osgi.manifest'/>
      <p n='uses' v='org.eclipse.virgo.util.osgi,org.eclipse.virgo.util.osgi.manifest.parse,org.eclipse.virgo.util.parser.manifest,org.osgi.framework'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.osgi.manifest.parse'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.common)(version&gt;=3.0.1)(!(version&gt;=3.0.2)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.common ;version=[3.0.1,3.0.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.virgo.util.parser.manifest)(version&gt;=3.0.1)(!(version&gt;=3.0.2)))' multiple='false' name='package' optional='false'>
      Import package org.eclipse.virgo.util.parser.manifest ;version=[3.0.1,3.0.2)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.6.1,2.0.0)
    </require>
  </resource>
  <resource id='org.eclipse.virgo.util.parser.manifest/3.0.1.RELEASE' presentationname='Java Manifest Parser' symbolicname='org.eclipse.virgo.util.parser.manifest' uri='org.eclipse.virgo.util.parser.manifest-3.0.1.RELEASE.jar' version='3.0.1.RELEASE'>
    <size>
      24917
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Manifest Parser'/>
      <p n='symbolicname' v='org.eclipse.virgo.util.parser.manifest'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.virgo.util.parser.manifest'/>
      <p n='uses' v='org.eclipse.virgo.util.parser.manifest.internal'/>
      <p n='version' t='version' v='3.0.1.RELEASE'/>
    </capability>
  </resource>
  <resource id='org.springframework.aop/3.0.5.RELEASE' presentationname='Spring AOP' symbolicname='org.springframework.aop' uri='org.springframework.aop-3.0.5.RELEASE.jar' version='3.0.5.RELEASE'>
    <size>
      321190
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring AOP'/>
      <p n='symbolicname' v='org.springframework.aop'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.aspectj'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.aspectj.bridge,org.aspectj.lang,org.aspectj.lang.reflect,org.aspectj.runtime.internal,org.aspectj.weaver.ast,org.aspectj.weaver.internal.tools,org.aspectj.weaver.reflect,org.aspectj.weaver.tools,org.springframework.aop,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.aspectj.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.aspectj.lang.reflect,org.springframework.aop,org.springframework.aop.aspectj,org.springframework.aop.aspectj.autoproxy,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.aspectj.autoproxy'/>
      <p n='uses' v='org.aspectj.util,org.springframework.aop,org.springframework.aop.framework.autoproxy'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.config'/>
      <p n='uses' v='org.springframework.aop.aspectj,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework'/>
      <p n='uses' v='net.sf.cglib.proxy,org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.aop.framework.adapter,org.springframework.beans,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework.adapter'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework.autoproxy'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.framework.adapter,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.framework.autoproxy.target'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.framework.autoproxy,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.interceptor'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.apache.commons.logging,org.springframework.aop,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.core,org.springframework.core.task,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.scope'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.framework,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.support'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.support.annotation'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.target'/>
      <p n='uses' v='org.apache.commons.pool,org.springframework.aop,org.springframework.aop.support,org.springframework.beans,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.aop.target.dynamic'/>
      <p n='uses' v='org.springframework.aop,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.jamonapi)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.jamonapi ;version=[2.4.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.core)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.core ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.transform.impl)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.transform.impl ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool.impl)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool.impl ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.bridge)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.bridge ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang.annotation)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang.annotation ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.lang.reflect)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.lang.reflect ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.runtime.internal)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.runtime.internal ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.util)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.util ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.ast)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.ast ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.internal.tools)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.internal.tools ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.patterns ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.reflect)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.reflect ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.tools)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.tools ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.parsing ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.beans/3.0.5.RELEASE' presentationname='Spring Beans' symbolicname='org.springframework.beans' uri='org.springframework.beans-3.0.5.RELEASE.jar' version='3.0.5.RELEASE'>
    <size>
      555410
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Beans'/>
      <p n='symbolicname' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.annotation'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory'/>
      <p n='uses' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access.el'/>
      <p n='uses' v='javax.el,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.annotation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.wiring,org.springframework.core,org.springframework.core.type'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.config'/>
      <p n='uses' v='javax.inject,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.support,org.springframework.core,org.springframework.core.convert,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.parsing'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.serviceloader'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.support'/>
      <p n='uses' v='javax.inject,net.sf.cglib.proxy,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.core.convert,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.wiring'/>
      <p n='uses' v='org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.xml'/>
      <p n='uses' v='javax.xml.parsers,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.core.io,org.springframework.core.io.support,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.propertyeditors'/>
      <p n='uses' v='org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.inject)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.inject ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.context/3.0.5.RELEASE' presentationname='Spring Context' symbolicname='org.springframework.context' uri='org.springframework.context-3.0.5.RELEASE.jar' version='3.0.5.RELEASE'>
    <size>
      668861
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Context'/>
      <p n='symbolicname' v='org.springframework.context'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.context,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.annotation'/>
      <p n='uses' v='net.sf.cglib.proxy,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.support,org.springframework.core.io,org.springframework.core.type,org.springframework.core.type.classreading,org.springframework.core.type.filter,org.springframework.stereotype,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.event'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.expression'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.expression,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.i18n'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.support'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.core,org.springframework.core.convert,org.springframework.core.convert.support,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.weaving'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.access'/>
      <p n='uses' v='javax.ejb,javax.naming,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.config'/>
      <p n='uses' v='org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.interceptor'/>
      <p n='uses' v='javax.annotation,javax.ejb,javax.interceptor,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.beans.factory.annotation'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.support'/>
      <p n='uses' v='javax.ejb,javax.jms,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format'/>
      <p n='uses' v='org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.annotation'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime'/>
      <p n='uses' v='org.springframework.format'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime.joda'/>
      <p n='uses' v='org.joda.time,org.joda.time.format,org.springframework.context,org.springframework.core.convert.converter,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.number'/>
      <p n='uses' v='org.springframework.context,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.context,org.springframework.core.convert,org.springframework.core.convert.converter,org.springframework.core.convert.support,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.glassfish'/>
      <p n='uses' v='javax.persistence.spi,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.jboss'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.oc4j'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.weblogic'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.access'/>
      <p n='uses' v='javax.management,javax.management.remote,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx,org.springframework.jmx.export.assembler,org.springframework.jmx.export.naming,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.annotation'/>
      <p n='uses' v='org.springframework.jmx.export,org.springframework.jmx.export.metadata,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.assembler'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.beans.factory,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.metadata'/>
      <p n='uses' v='javax.management.modelmbean,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.naming'/>
      <p n='uses' v='javax.management,org.springframework.beans.factory,org.springframework.core.io,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.notification'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.jmx'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.support'/>
      <p n='uses' v='javax.management,javax.management.remote,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans.factory,org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.jndi'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.rmi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.omg.CORBA,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi,org.springframework.remoting,org.springframework.remoting.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.soap'/>
      <p n='uses' v='javax.xml.namespace,org.springframework.remoting'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.support'/>
      <p n='uses' v='com.sun.net.httpserver,org.aopalliance.intercept,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.task'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.context.event,org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.backportconcurrent'/>
      <p n='uses' v='edu.emory.mathcs.backport.java.util.concurrent,org.springframework.beans.factory,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.concurrent'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.config'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.core.task,org.springframework.scheduling,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.support,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.timer'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.bsh'/>
      <p n='uses' v='bsh,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.groovy'/>
      <p n='uses' v='groovy.lang,org.springframework.beans,org.springframework.beans.factory,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.jruby'/>
      <p n='uses' v='org.jruby,org.jruby.ast,org.jruby.exceptions,org.jruby.runtime.builtin,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.support'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.target.dynamic,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.scripting'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.stereotype'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context'/>
      <p n='uses' v='org.springframework.context'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context.support'/>
      <p n='uses' v='org.springframework.context,org.springframework.ui.context'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.context.support,org.springframework.core,org.springframework.core.convert'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.beanvalidation'/>
      <p n='uses' v='javax.validation,javax.validation.metadata,org.hibernate.validator.resourceloading,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core.io,org.springframework.validation'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.support'/>
      <p n='uses' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bsh)(version&gt;=2.0.0.b4)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package bsh ;version=[2.0.0.b4,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package edu.emory.mathcs.backport.java.util.concurrent
       ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=groovy.lang)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package groovy.lang ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=2.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.ejb ;version=[2.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.interceptor)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.interceptor ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.jms ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.modelmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.openmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.remote ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.spi ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.rmi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.rmi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.bootstrap)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.bootstrap ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.asm)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.asm ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.core)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.core ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.3)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.1.3,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.loadtime)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.loadtime ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.control)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.control ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.messageinterpolation)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.messageinterpolation
       ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.resourceloading)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.resourceloading ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time.format)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time.format ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.ast)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.ast ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.exceptions)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.exceptions ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.javasupport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.javasupport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime.builtin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime.builtin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.omg.CORBA)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.omg.CORBA ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework.adapter)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework.adapter ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.interceptor)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.interceptor ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.scope)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.scope ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support.annotation ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target.dynamic)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target.dynamic ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.annotation)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.annotation ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.converter)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.converter ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.classreading)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.classreading ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.filter)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.filter ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.support
       ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.support)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.support ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.core/3.0.5.RELEASE' presentationname='Spring Core' symbolicname='org.springframework.core' uri='org.springframework.core-3.0.5.RELEASE.jar' version='3.0.5.RELEASE'>
    <size>
      382442
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Core'/>
      <p n='symbolicname' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core'/>
      <p n='uses' v='org.springframework.asm,org.springframework.asm.commons,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.annotation'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.converter'/>
      <p n='uses' v='org.springframework.core.convert'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.support'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.core,org.springframework.core.convert,org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.enums'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io.support'/>
      <p n='uses' v='org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert.converter,org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.style'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task.support'/>
      <p n='uses' v='org.springframework.core.task'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.classreading'/>
      <p n='uses' v='org.springframework.asm,org.springframework.core.io,org.springframework.core.type,org.springframework.util'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.filter'/>
      <p n='uses' v='org.springframework.core.type,org.springframework.core.type.classreading'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util'/>
      <p n='uses' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.comparator'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.xml'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,javax.xml.stream.util,javax.xml.transform,javax.xml.transform.sax,org.apache.commons.logging,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='3.0.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream.events ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream.util ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.xml)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j.xml ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.bridge)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.bridge ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.bcel)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.bcel ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=1.5.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.patterns ;version=[1.5.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.core.runtime)(version&gt;=0.0.0)(common=split)(mandatory:&lt;*common))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.core.runtime ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.vfs)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.vfs ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.virtual)(version&gt;=2.1.0.GA)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.virtual ;version=[2.1.0.GA,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm.commons)(version&gt;=3.0.5)(!(version&gt;=3.0.6)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm.commons ;version=[3.0.5,3.0.6)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.osgi.core/1.2.1' presentationname='spring-osgi-core' symbolicname='org.springframework.osgi.core' uri='org.springframework.osgi.core-1.2.1.jar' version='1.2.1'>
    <description>
      Spring/OSGi core classes. Offers OSGi-based application context
       and importer/exporter functionality.
    </description>
    <size>
      362889
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0
    </license>
    <documentation>
      http://www.springframework.org/osgi
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-osgi-core'/>
      <p n='symbolicname' v='org.springframework.osgi.core'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.bundle'/>
      <p n='uses' v='org.osgi.framework,org.springframework.beans.factory,org.springframework.context,org.springframework.core.enums,org.springframework.core.io,org.springframework.osgi.context'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.compendium.cm'/>
      <p n='uses' v='org.osgi.framework,org.springframework.beans.factory,org.springframework.osgi.context'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.compendium.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.osgi.config.internal.util,org.w3c.dom'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.config'/>
      <p n='uses' v='org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.osgi.config.internal.util,org.springframework.osgi.service.importer.support,org.w3c.dom'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.context'/>
      <p n='uses' v='org.osgi.framework,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.context,org.springframework.osgi.context.event'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.context.event'/>
      <p n='uses' v='org.osgi.framework,org.springframework.context,org.springframework.context.event'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.context.support'/>
      <p n='uses' v='org.apache.commons.logging,org.osgi.framework,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.event,org.springframework.context.support,org.springframework.core.io,org.springframework.core.io.support,org.springframework.osgi.context,org.springframework.osgi.context.event,org.springframework.osgi.util.internal,org.xml.sax'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.service'/>
      <p n='uses' v='org.osgi.framework,org.springframework.osgi'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.service.exporter'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.service.exporter.support'/>
      <p n='uses' v='org.osgi.framework,org.springframework.beans,org.springframework.beans.factory,org.springframework.core,org.springframework.core.enums,org.springframework.osgi.context,org.springframework.osgi.service.exporter,org.springframework.osgi.service.exporter.support.internal.controller'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.service.importer'/>
      <p n='uses' v='org.osgi.framework,org.springframework.osgi.service'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.service.importer.event'/>
      <p n='uses' v='org.springframework.context,org.springframework.osgi.service.importer'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.service.importer.support'/>
      <p n='uses' v='org.aopalliance.aop,org.aopalliance.intercept,org.osgi.framework,org.springframework.beans.factory,org.springframework.context,org.springframework.core.enums,org.springframework.osgi.context,org.springframework.osgi.context.internal.classloader,org.springframework.osgi.service.importer,org.springframework.osgi.service.importer.support.internal.aop,org.springframework.osgi.service.importer.support.internal.collection,org.springframework.osgi.service.importer.support.internal.controller,org.springframework.osgi.service.importer.support.internal.dependency'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.util'/>
      <p n='uses' v='org.apache.commons.logging,org.osgi.framework,org.springframework.util'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.aop ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.aopalliance.intercept ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.startlevel ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop.framework ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.aop.support ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.event)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.event ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.enums)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.enums ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.osgi.io)(version&gt;=1.2.1)(version&lt;=1.2.1))' multiple='false' name='package' optional='false'>
      Import package org.springframework.osgi.io ;version=[1.2.1,1.2.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.springframework.osgi.io/1.2.1' presentationname='spring-osgi-io' symbolicname='org.springframework.osgi.io' uri='org.springframework.osgi.io-1.2.1.jar' version='1.2.1'>
    <description>
      Spring/OSGi IO abstract classes. Provides Resource, ResourceLoader
       and ResourcePatternResolver for OSGi environments.
    </description>
    <size>
      35859
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0
    </license>
    <documentation>
      http://www.springframework.org/osgi
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-osgi-io'/>
      <p n='symbolicname' v='org.springframework.osgi.io'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.osgi.io'/>
      <p n='uses' v='org.osgi.framework,org.springframework.core.io,org.springframework.core.io.support,org.springframework.osgi.io.internal.resolver'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[2.5.6,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=2.5.6)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[2.5.6,4.0.0)
    </require>
  </resource>
</repository>